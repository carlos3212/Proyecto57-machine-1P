# Generated by Django 2.2 on 2020-12-14 21:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=350)),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('_index', models.CharField(blank=True, max_length=150, null=True)),
                ('_type', models.CharField(blank=True, max_length=75, null=True)),
                ('_score', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=2)),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Repositorie',
            fields=[
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('openDoarId', models.IntegerField()),
                ('name', models.CharField(max_length=350)),
                ('urlHomepage', models.URLField(blank=True, null=True)),
                ('urlOaipmh', models.URLField(blank=True, null=True)),
                ('uriJournals', models.URLField(blank=True, null=True)),
                ('physicalName', models.CharField(blank=True, max_length=250, null=True)),
                ('source', models.CharField(blank=True, max_length=250, null=True)),
                ('software', models.CharField(blank=True, max_length=250, null=True)),
                ('metadataFormat', models.CharField(blank=True, max_length=250, null=True)),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('journal', models.CharField(blank=True, max_length=250, null=True)),
                ('roarId', models.IntegerField()),
                ('baseId', models.IntegerField()),
                ('pdfStatus', models.CharField(blank=True, max_length=250, null=True)),
                ('nrUpdates', models.IntegerField()),
                ('disabled', models.BooleanField()),
                ('lastUpdateTime', models.DateTimeField(blank=True, null=True)),
                ('repositoryLocation', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Repositorio',
                'verbose_name_plural': 'Repositorios',
            },
        ),
        migrations.CreateModel(
            name='RepositoryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('pdfStatus', models.PositiveIntegerField()),
                ('textStatus', models.PositiveIntegerField()),
                ('metadataAdded', models.BigIntegerField()),
                ('metadataUpdated', models.BigIntegerField()),
                ('timestamp', models.BigIntegerField()),
                ('depositedDate', models.BigIntegerField()),
                ('deletedStatus', models.CharField(blank=True, max_length=5, null=True)),
                ('pdfSize', models.IntegerField()),
                ('tdmOnly', models.BooleanField()),
                ('pdfOrigin', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('datePublished', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted', models.CharField(max_length=75)),
                ('journals', models.CharField(blank=True, max_length=350, null=True)),
                ('language', models.CharField(blank=True, max_length=75, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('fullText', models.TextField(blank=True, null=True)),
                ('fullTextIdentifier', models.URLField(blank=True, null=True)),
                ('duplicateId', models.CharField(blank=True, max_length=75, null=True)),
                ('publisher', models.CharField(blank=True, max_length=250, null=True)),
                ('rawRecordXml', models.TextField()),
                ('similarities', models.CharField(blank=True, max_length=500, null=True)),
                ('title', models.CharField(max_length=750)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=75, null=True)),
                ('oai', models.CharField(blank=True, max_length=75, null=True)),
                ('downloadUrl', models.URLField(blank=True, null=True)),
                ('pdfHashValue', models.CharField(blank=True, max_length=350, null=True)),
                ('documentType', models.CharField(blank=True, max_length=350, null=True)),
                ('documentTypeConfidence', models.CharField(blank=True, max_length=350, null=True)),
                ('citationCount', models.CharField(blank=True, max_length=350, null=True)),
                ('estimatedCitationCount', models.CharField(blank=True, max_length=350, null=True)),
                ('acceptedDate', models.CharField(blank=True, max_length=350, null=True)),
                ('depositedDate', models.IntegerField(blank=True, null=True)),
                ('publishedDate', models.IntegerField(blank=True, null=True)),
                ('issn', models.CharField(blank=True, max_length=350, null=True)),
                ('attachmentCount', models.IntegerField(blank=True, null=True)),
                ('repositoryPublicReleaseDate', models.CharField(blank=True, max_length=350, null=True)),
                ('extendedMetadataAttributes', models.CharField(blank=True, max_length=350, null=True)),
                ('crossrefDocument', models.CharField(blank=True, max_length=350, null=True)),
                ('magDocument', models.CharField(blank=True, max_length=350, null=True)),
                ('orcidAuthors', models.CharField(blank=True, max_length=350, null=True)),
                ('authors_m2m', models.ManyToManyField(to='base.Author', verbose_name='Autores')),
                ('element', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Element')),
                ('repositories_m2m', models.ManyToManyField(related_name='repositories_rel', to='base.Repositorie', verbose_name='Repositorios')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=350)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(max_length=350)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Source')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=350)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Source')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='source',
            name='topics_m2m',
            field=models.ManyToManyField(related_name='topics_rel', to='base.Topic', verbose_name='topics'),
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('write_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.Source')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
